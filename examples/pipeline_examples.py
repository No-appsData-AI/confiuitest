#!/usr/bin/env python3
"""
–ü—Ä–∏–º–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Pipeline Builder
–ê–≤—Ç–æ—Ä: AI Assistant
–í–µ—Ä—Å–∏—è: 1.0.0

–ü—Ä–∏–º–µ—Ä—ã —Å–æ–∑–¥–∞–Ω–∏—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –ø–∞–π–ø–ª–∞–π–Ω–æ–≤ ComfyUI
"""

import json
import os
from .comfyui_pipeline_builder import ComfyUIPipelineBuilder, PipelineTemplates
from .pipeline_manager import PipelineManager


def example_simple_openai_pipeline():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ —Å OpenAI"""
    print("üé® –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ—Å—Ç–æ–≥–æ OpenAI –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
    builder = ComfyUIPipelineBuilder("http://localhost:8188")
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAI
    openai_node = builder.add_node(
        node_type="OpenAIImageGenerator",
        inputs={
            "prompt": "A beautiful sunset over mountains, digital art style",
            "api_key": "",
            "model": "dall-e-3",
            "size": "1024x1024",
            "quality": "standard",
            "style": "vivid"
        },
        title="Sunset Generator",
        description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –∑–∞–∫–∞—Ç–∞"
    )
    
    # –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —É–∑–ª–∞ –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    preview_node = builder.add_node(
        node_type="PreviewImage",
        inputs={},
        title="Preview",
        description="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
    )
    
    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —É–∑–ª–æ–≤
    builder.connect_nodes(openai_node, 0, preview_node, 0)
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    builder.print_workflow_info()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    builder.save_workflow("examples/simple_openai_pipeline.json")
    
    print("‚úÖ –ü—Ä–æ—Å—Ç–æ–π OpenAI –ø–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω!")


def example_s3_integration_pipeline():
    """–ü—Ä–∏–º–µ—Ä –ø–∞–π–ø–ª–∞–π–Ω–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π S3"""
    print("‚òÅÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞ —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π S3...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
    builder = ComfyUIPipelineBuilder("http://localhost:8188")
    
    # –£–∑–µ–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAI
    openai_node = builder.add_node(
        node_type="OpenAIImageGenerator",
        inputs={
            "prompt": "A futuristic city with flying cars, neon lights",
            "api_key": "",
            "model": "dall-e-3",
            "size": "1024x1024",
            "quality": "hd",
            "style": "vivid"
        },
        title="Futuristic City Generator",
        description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Ñ—É—Ç—É—Ä–∏—Å—Ç–∏—á–µ—Å–∫–æ–≥–æ –≥–æ—Ä–æ–¥–∞"
    )
    
    # –£–∑–µ–ª –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3
    s3_upload_node = builder.add_node(
        node_type="S3ImageUploader",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "metadata": json.dumps({
                "prompt": "A futuristic city with flying cars, neon lights",
                "model": "dall-e-3",
                "category": "futuristic"
            })
        },
        title="S3 Uploader",
        description="–ó–∞–≥—Ä—É–∑–∫–∞ –≤ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    )
    
    # –£–∑–µ–ª –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    preview_node = builder.add_node(
        node_type="PreviewImage",
        inputs={},
        title="Preview",
        description="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
    )
    
    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    builder.connect_nodes(openai_node, 0, s3_upload_node, 0)
    builder.connect_nodes(openai_node, 0, preview_node, 0)
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    builder.print_workflow_info()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    builder.save_workflow("examples/s3_integration_pipeline.json")
    
    print("‚úÖ –ü–∞–π–ø–ª–∞–π–Ω —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π S3 —Å–æ–∑–¥–∞–Ω!")


def example_workflow_management_pipeline():
    """–ü—Ä–∏–º–µ—Ä –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è workflows"""
    print("üìã –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è workflows...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
    builder = ComfyUIPipelineBuilder("http://localhost:8188")
    
    # –£–∑–µ–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è workflow
    save_node = builder.add_node(
        node_type="S3WorkflowSaver",
        inputs={
            "workflow_data": json.dumps({
                "name": "Example Workflow",
                "version": "1.0.0",
                "description": "–ü—Ä–∏–º–µ—Ä workflow –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏",
                "author": "AI Assistant",
                "created_at": "2024-12-01T12:00:00Z"
            }),
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "workflow_name": "example_workflow.json"
        },
        title="Workflow Saver",
        description="–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ workflow –≤ S3"
    )
    
    # –£–∑–µ–ª –∑–∞–≥—Ä—É–∑–∫–∏ workflow
    load_node = builder.add_node(
        node_type="S3WorkflowLoader",
        inputs={
            "workflow_name": "example_workflow.json",
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1"
        },
        title="Workflow Loader",
        description="–ó–∞–≥—Ä—É–∑–∫–∞ workflow –∏–∑ S3"
    )
    
    # –£–∑–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    info_node = builder.add_node(
        node_type="S3StorageInfo",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1"
        },
        title="Storage Info",
        description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    )
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    builder.print_workflow_info()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    builder.save_workflow("examples/workflow_management_pipeline.json")
    
    print("‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è workflows —Å–æ–∑–¥–∞–Ω!")


def example_batch_processing_pipeline():
    """–ü—Ä–∏–º–µ—Ä –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print("üîÑ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞ –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
    builder = ComfyUIPipelineBuilder("http://localhost:8188")
    
    # –£–∑–µ–ª —Å–ø–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
    lister_node = builder.add_node(
        node_type="S3ImageLister",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "prefix": "comfyui/images/",
            "max_keys": 10
        },
        title="Image Lister",
        description="–ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π"
    )
    
    # –£–∑–µ–ª —Å–∫–∞—á–∏–≤–∞–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    download_node = builder.add_node(
        node_type="S3ImageDownloader",
        inputs={
            "s3_key": "comfyui/images/20241201_120000_image.png",
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1"
        },
        title="Image Downloader",
        description="–°–∫–∞—á–∏–≤–∞–Ω–∏–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    )
    
    # –£–∑–µ–ª –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    preview_node = builder.add_node(
        node_type="PreviewImage",
        inputs={},
        title="Preview",
        description="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
    )
    
    # –£–∑–µ–ª –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
    upload_node = builder.add_node(
        node_type="S3ImageUploader",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "metadata": json.dumps({"processed": True, "batch": "example"})
        },
        title="Processed Uploader",
        description="–ó–∞–≥—Ä—É–∑–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–æ–≥–æ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è"
    )
    
    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    builder.connect_nodes(download_node, 0, preview_node, 0)
    builder.connect_nodes(download_node, 0, upload_node, 0)
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    builder.print_workflow_info()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    builder.save_workflow("examples/batch_processing_pipeline.json")
    
    print("‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –¥–ª—è –ø–∞–∫–µ—Ç–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–∑–¥–∞–Ω!")


def example_using_pipeline_manager():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Pipeline Manager"""
    print("üõ†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Pipeline Manager...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –º–µ–Ω–µ–¥–∂–µ—Ä–∞
    manager = PipelineManager("http://localhost:8188")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ OpenAI –ø–∞–π–ø–ª–∞–π–Ω–∞
    print("–°–æ–∑–¥–∞–Ω–∏–µ OpenAI –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    openai_builder = manager.create_openai_pipeline(
        prompt="A magical forest with glowing mushrooms and fairy lights",
        model="dall-e-3",
        size="1024x1024"
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞
    manager.save_pipeline_to_file(openai_builder, "examples/magical_forest_pipeline.json")
    
    # –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞
    validation = manager.validate_pipeline(openai_builder)
    print(f"–í–∞–ª–∏–¥–∞—Ü–∏—è: {validation}")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    complex_builder = manager.create_complex_pipeline(
        prompt="A steampunk airship flying over Victorian London",
        bucket_name="comfyui-images",
        aws_access_key_id="",
        aws_secret_access_key=""
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
    manager.save_pipeline_to_file(complex_builder, "examples/steampunk_airship_pipeline.json")
    
    print("‚úÖ –ü—Ä–∏–º–µ—Ä—ã —Å Pipeline Manager —Å–æ–∑–¥–∞–Ω—ã!")


def example_using_templates():
    """–ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è —à–∞–±–ª–æ–Ω–æ–≤"""
    print("üìù –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–æ–≤ –ø–∞–π–ø–ª–∞–π–Ω–æ–≤...")
    
    # –®–∞–±–ª–æ–Ω OpenAI -> S3
    print("–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ OpenAI -> S3...")
    template_builder = PipelineTemplates.openai_to_s3_pipeline(
        prompt="A cyberpunk street scene with neon signs and rain",
        bucket_name="comfyui-images",
        aws_access_key_id="",
        aws_secret_access_key=""
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
    template_builder.save_workflow("examples/cyberpunk_template.json")
    
    # –®–∞–±–ª–æ–Ω S3 -> Preview
    print("–°–æ–∑–¥–∞–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞ S3 -> Preview...")
    download_template = PipelineTemplates.s3_to_preview_pipeline(
        s3_key="comfyui/images/cyberpunk_street.png",
        bucket_name="comfyui-images",
        aws_access_key_id="",
        aws_secret_access_key=""
    )
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —à–∞–±–ª–æ–Ω–∞
    download_template.save_workflow("examples/download_template.json")
    
    print("‚úÖ –®–∞–±–ª–æ–Ω—ã –ø–∞–π–ø–ª–∞–π–Ω–æ–≤ —Å–æ–∑–¥–∞–Ω—ã!")


def example_advanced_pipeline():
    """–ü—Ä–∏–º–µ—Ä –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞ —Å –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–º–∏ —É–∑–ª–∞–º–∏"""
    print("üöÄ –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞...")
    
    # –°–æ–∑–¥–∞–Ω–∏–µ —Å—Ç—Ä–æ–∏—Ç–µ–ª—è
    builder = ComfyUIPipelineBuilder("http://localhost:8188")
    
    # –£–∑–µ–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ OpenAI
    openai_node = builder.add_node(
        node_type="OpenAIImageGenerator",
        inputs={
            "prompt": "A majestic dragon flying over a medieval castle at sunset",
            "api_key": "",
            "model": "dall-e-3",
            "size": "1024x1024",
            "quality": "hd",
            "style": "vivid"
        },
        title="Dragon Generator",
        description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –¥—Ä–∞–∫–æ–Ω–∞ –Ω–∞–¥ –∑–∞–º–∫–æ–º"
    )
    
    # –£–∑–µ–ª –∑–∞–≥—Ä—É–∑–∫–∏ –≤ S3
    s3_upload_node = builder.add_node(
        node_type="S3ImageUploader",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "metadata": json.dumps({
                "prompt": "A majestic dragon flying over a medieval castle at sunset",
                "model": "dall-e-3",
                "category": "fantasy",
                "quality": "hd"
            })
        },
        title="S3 Uploader",
        description="–ó–∞–≥—Ä—É–∑–∫–∞ –≤ –æ–±–ª–∞—á–Ω–æ–µ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    )
    
    # –£–∑–µ–ª –ø—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω–æ–≥–æ –ø—Ä–æ—Å–º–æ—Ç—Ä–∞
    preview_node = builder.add_node(
        node_type="PreviewImage",
        inputs={},
        title="Preview",
        description="–ü—Ä–µ–¥–≤–∞—Ä–∏—Ç–µ–ª—å–Ω—ã–π –ø—Ä–æ—Å–º–æ—Ç—Ä"
    )
    
    # –£–∑–µ–ª –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ
    info_node = builder.add_node(
        node_type="S3StorageInfo",
        inputs={
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1"
        },
        title="Storage Info",
        description="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ö—Ä–∞–Ω–∏–ª–∏—â–µ"
    )
    
    # –£–∑–µ–ª —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è workflow
    workflow_save_node = builder.add_node(
        node_type="S3WorkflowSaver",
        inputs={
            "workflow_data": json.dumps({
                "name": "Dragon Castle Workflow",
                "version": "1.0.0",
                "description": "–ü–∞–π–ø–ª–∞–π–Ω –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –¥—Ä–∞–∫–æ–Ω–∞ –Ω–∞–¥ –∑–∞–º–∫–æ–º",
                "author": "AI Assistant",
                "created_at": "2024-12-01T12:00:00Z"
            }),
            "bucket_name": "comfyui-images",
            "aws_access_key_id": "",
            "aws_secret_access_key": "",
            "region_name": "us-east-1",
            "workflow_name": "dragon_castle_workflow.json"
        },
        title="Workflow Saver",
        description="–°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ workflow"
    )
    
    # –°–æ–µ–¥–∏–Ω–µ–Ω–∏—è
    builder.connect_nodes(openai_node, 0, s3_upload_node, 0)
    builder.connect_nodes(openai_node, 0, preview_node, 0)
    
    # –í—ã–≤–æ–¥ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏
    builder.print_workflow_info()
    
    # –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –≤ —Ñ–∞–π–ª
    builder.save_workflow("examples/advanced_dragon_pipeline.json")
    
    print("‚úÖ –ü—Ä–æ–¥–≤–∏–Ω—É—Ç—ã–π –ø–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω!")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–º–µ—Ä–æ–≤"""
    print("üéØ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–º–µ—Ä–æ–≤ Pipeline Builder")
    print("=" * 50)
    
    # –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è –ø—Ä–∏–º–µ—Ä–æ–≤
    os.makedirs("examples", exist_ok=True)
    
    try:
        # –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö –ø—Ä–∏–º–µ—Ä–æ–≤
        example_simple_openai_pipeline()
        print()
        
        example_s3_integration_pipeline()
        print()
        
        example_workflow_management_pipeline()
        print()
        
        example_batch_processing_pipeline()
        print()
        
        example_using_pipeline_manager()
        print()
        
        example_using_templates()
        print()
        
        example_advanced_pipeline()
        print()
        
        print("üéâ –í—Å–µ –ø—Ä–∏–º–µ—Ä—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        print("\nüìÅ –°–æ–∑–¥–∞–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã:")
        
        # –í—ã–≤–æ–¥ —Å–ø–∏—Å–∫–∞ —Å–æ–∑–¥–∞–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤
        example_files = [
            "simple_openai_pipeline.json",
            "s3_integration_pipeline.json",
            "workflow_management_pipeline.json",
            "batch_processing_pipeline.json",
            "magical_forest_pipeline.json",
            "steampunk_airship_pipeline.json",
            "cyberpunk_template.json",
            "download_template.json",
            "advanced_dragon_pipeline.json"
        ]
        
        for file in example_files:
            filepath = f"examples/{file}"
            if os.path.exists(filepath):
                print(f"  ‚úÖ {filepath}")
            else:
                print(f"  ‚ùå {filepath} (–Ω–µ –Ω–∞–π–¥–µ–Ω)")
        
        print("\nüöÄ –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–æ–≤:")
        print("1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª—ã –≤ ComfyUI —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å")
        print("2. –ò–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ Pipeline Manager –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –∑–∞–≥—Ä—É–∑–∫–∏")
        print("3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ API –∫–ª—é—á–∏ –∏ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ —É–∑–ª–∞—Ö")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –ø—Ä–∏–º–µ—Ä–æ–≤: {e}")
        return 1
    
    return 0


if __name__ == "__main__":
    exit(main()) 