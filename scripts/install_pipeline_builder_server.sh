#!/bin/bash
# –°–∫—Ä–∏–ø—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏ Pipeline Builder –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ComfyUI
# –ê–≤—Ç–æ—Ä: AI Assistant
# –í–µ—Ä—Å–∏—è: 1.0.0

set -e

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log_info() {
    echo -e "${BLUE}‚ÑπÔ∏è  $1${NC}"
}

log_success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

log_warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

log_error() {
    echo -e "${RED}‚ùå $1${NC}"
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞—Ä–≥—É–º–µ–Ω—Ç–æ–≤
if [ $# -eq 0 ]; then
    log_error "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 <–ø—É—Ç—å_–∫_comfyui>"
    log_info "–ü—Ä–∏–º–µ—Ä: $0 /home/ubuntu/ComfyUI"
    exit 1
fi

COMFYUI_PATH="$1"
PIPELINE_BUILDER_DIR="$COMFYUI_PATH/custom_nodes/pipeline_builder"

log_info "üöÄ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Pipeline Builder –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ ComfyUI"
log_info "–ü—É—Ç—å –∫ ComfyUI: $COMFYUI_PATH"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—É—â–µ—Å—Ç–≤–æ–≤–∞–Ω–∏—è ComfyUI
if [ ! -d "$COMFYUI_PATH" ]; then
    log_error "ComfyUI –Ω–µ –Ω–∞–π–¥–µ–Ω –ø–æ –ø—É—Ç–∏: $COMFYUI_PATH"
    exit 1
fi

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
if [ ! -d "$COMFYUI_PATH/venv" ]; then
    log_error "–í–∏—Ä—Ç—É–∞–ª—å–Ω–æ–µ –æ–∫—Ä—É–∂–µ–Ω–∏–µ ComfyUI –Ω–µ –Ω–∞–π–¥–µ–Ω–æ"
    log_info "–°–Ω–∞—á–∞–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ ComfyUI —Å –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–º –æ–∫—Ä—É–∂–µ–Ω–∏–µ–º"
    exit 1
fi

# –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è
log_info "üîß –ê–∫—Ç–∏–≤–∞—Ü–∏—è –≤–∏—Ä—Ç—É–∞–ª—å–Ω–æ–≥–æ –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
source "$COMFYUI_PATH/venv/bin/activate"

# –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –¥–ª—è Pipeline Builder
log_info "üìÅ –°–æ–∑–¥–∞–Ω–∏–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ Pipeline Builder..."
mkdir -p "$PIPELINE_BUILDER_DIR"

# –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ Pipeline Builder
log_info "üìã –ö–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤..."

# –û—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
cp examples/comfyui_pipeline_builder.py "$PIPELINE_BUILDER_DIR/"
cp examples/pipeline_manager.py "$PIPELINE_BUILDER_DIR/"
cp examples/pipeline_examples.py "$PIPELINE_BUILDER_DIR/"

# S3 –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
cp examples/s3_storage_manager.py "$PIPELINE_BUILDER_DIR/"
cp examples/comfyui_s3_nodes.py "$PIPELINE_BUILDER_DIR/"

# OpenAI –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è
cp examples/openai_image_generator.py "$PIPELINE_BUILDER_DIR/"
cp examples/comfyui_openai_node.py "$PIPELINE_BUILDER_DIR/"

# –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
cp config/settings.py "$PIPELINE_BUILDER_DIR/"

# –°–æ–∑–¥–∞–Ω–∏–µ __init__.py
log_info "üì¶ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–∫–µ—Ç–∞..."
cat > "$PIPELINE_BUILDER_DIR/__init__.py" << 'EOF'
"""
Pipeline Builder –¥–ª—è ComfyUI
–ê–≤—Ç–æ—Ä: AI Assistant
–í–µ—Ä—Å–∏—è: 1.0.0
"""

__version__ = "1.0.0"
__author__ = "AI Assistant"

# –û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã
from .comfyui_pipeline_builder import ComfyUIPipelineBuilder, PipelineTemplates
from .pipeline_manager import PipelineManager
from .s3_storage_manager import S3StorageManager
from .openai_image_generator import OpenAIImageGenerator

# ComfyUI —É–∑–ª—ã
from .comfyui_s3_nodes import (
    S3ImageUploader,
    S3ImageDownloader,
    S3ImageLister,
    S3WorkflowSaver,
    S3WorkflowLoader,
    S3StorageInfo
)

from .comfyui_openai_node import (
    OpenAIImageNode,
    OpenAIImageVariationNode
)

__all__ = [
    'ComfyUIPipelineBuilder',
    'PipelineTemplates',
    'PipelineManager',
    'S3StorageManager',
    'OpenAIImageGenerator',
    'S3ImageUploader',
    'S3ImageDownloader',
    'S3ImageLister',
    'S3WorkflowSaver',
    'S3WorkflowLoader',
    'S3StorageInfo',
    'OpenAIImageNode',
    'OpenAIImageVariationNode'
]
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ requirements.txt –¥–ª—è Pipeline Builder
log_info "üìã –°–æ–∑–¥–∞–Ω–∏–µ requirements.txt..."
cat > "$PIPELINE_BUILDER_DIR/requirements.txt" << 'EOF'
# Pipeline Builder Dependencies
requests>=2.28.0
boto3>=1.26.0
botocore>=1.29.0
Pillow>=8.0.0
numpy>=1.19.0
openai>=0.27.0
python-dotenv>=0.19.0
click>=8.0.0
colorama>=0.4.4
EOF

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
log_info "üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
pip install -r "$PIPELINE_BUILDER_DIR/requirements.txt"

# –°–æ–∑–¥–∞–Ω–∏–µ README.md
log_info "üìñ –°–æ–∑–¥–∞–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏–∏..."
cat > "$PIPELINE_BUILDER_DIR/README.md" << 'EOF'
# Pipeline Builder –¥–ª—è ComfyUI

–ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ–≥–æ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–æ–≤ ComfyUI —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π OpenAI –∏ AWS S3.

## –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏

- –ü—Ä–æ–≥—Ä–∞–º–º–Ω–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–æ–≤ ComfyUI
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å OpenAI API –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π
- –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å AWS S3 –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∞–π–ª–æ–≤
- –ì–æ—Ç–æ–≤—ã–µ —à–∞–±–ª–æ–Ω—ã –ø–∞–π–ø–ª–∞–π–Ω–æ–≤
- CLI –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è

## –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ

```python
from pipeline_builder import ComfyUIPipelineBuilder

# –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞
builder = ComfyUIPipelineBuilder("http://localhost:8188")
node_id = builder.add_node("OpenAIImageGenerator", {"prompt": "Beautiful sunset"})
builder.save_workflow("my_pipeline.json")
```

## –£—Å—Ç–∞–Ω–æ–≤–∫–∞

–ó–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã. –î–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ –∏–º–ø–æ—Ä—Ç–∏—Ä—É–π—Ç–µ –º–æ–¥—É–ª–∏.

## –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è

–ü–æ–¥—Ä–æ–±–Ω–∞—è –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: https://github.com/your-repo/confiuitest
EOF

# –°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤
log_info "üîß –°–æ–∑–¥–∞–Ω–∏–µ —É—Ç–∏–ª–∏—Ç–∞—Ä–Ω—ã—Ö —Å–∫—Ä–∏–ø—Ç–æ–≤..."

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–∞
cat > "$PIPELINE_BUILDER_DIR/create_pipeline.py" << 'EOF'
#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from pipeline_manager import PipelineManager

def main():
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python create_pipeline.py <—Ç–∏–ø> [–ø–∞—Ä–∞–º–µ—Ç—Ä—ã]")
        print("–¢–∏–ø—ã: openai, s3, complex")
        return
    
    pipeline_type = sys.argv[1]
    manager = PipelineManager()
    
    if pipeline_type == "openai":
        prompt = sys.argv[2] if len(sys.argv) > 2 else "Beautiful landscape"
        builder = manager.create_openai_pipeline(prompt)
        builder.save_workflow("generated_openai_pipeline.json")
        print("‚úÖ OpenAI –ø–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω: generated_openai_pipeline.json")
    
    elif pipeline_type == "s3":
        bucket = sys.argv[2] if len(sys.argv) > 2 else "comfyui-images"
        builder = manager.create_s3_upload_pipeline(bucket)
        builder.save_workflow("generated_s3_pipeline.json")
        print("‚úÖ S3 –ø–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω: generated_s3_pipeline.json")
    
    elif pipeline_type == "complex":
        prompt = sys.argv[2] if len(sys.argv) > 2 else "Futuristic city"
        bucket = sys.argv[3] if len(sys.argv) > 3 else "comfyui-images"
        builder = manager.create_complex_pipeline(prompt, bucket)
        builder.save_workflow("generated_complex_pipeline.json")
        print("‚úÖ –°–ª–æ–∂–Ω—ã–π –ø–∞–π–ø–ª–∞–π–Ω —Å–æ–∑–¥–∞–Ω: generated_complex_pipeline.json")
    
    else:
        print(f"‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π —Ç–∏–ø –ø–∞–π–ø–ª–∞–π–Ω–∞: {pipeline_type}")

if __name__ == "__main__":
    main()
EOF

# –°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
cat > "$PIPELINE_BUILDER_DIR/test_pipeline.py" << 'EOF'
#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –ø–∞–π–ø–ª–∞–π–Ω–æ–≤
"""

import sys
import os
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from comfyui_pipeline_builder import ComfyUIPipelineBuilder

def main():
    if len(sys.argv) < 2:
        print("–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python test_pipeline.py <—Ñ–∞–π–ª_–ø–∞–π–ø–ª–∞–π–Ω–∞>")
        return
    
    pipeline_file = sys.argv[1]
    
    if not os.path.exists(pipeline_file):
        print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {pipeline_file}")
        return
    
    builder = ComfyUIPipelineBuilder()
    if builder.load_workflow(pipeline_file):
        validation = builder.validate_workflow()
        print(f"‚úÖ –ü–∞–π–ø–ª–∞–π–Ω –∑–∞–≥—Ä—É–∂–µ–Ω: {pipeline_file}")
        print(f"–í–∞–ª–∏–¥–Ω–æ—Å—Ç—å: {validation['valid']}")
        if validation['errors']:
            print("–û—à–∏–±–∫–∏:", validation['errors'])
        if validation['warnings']:
            print("–ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:", validation['warnings'])
    else:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø–∞–π–ø–ª–∞–π–Ω–∞: {pipeline_file}")

if __name__ == "__main__":
    main()
EOF

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ
chmod +x "$PIPELINE_BUILDER_DIR/create_pipeline.py"
chmod +x "$PIPELINE_BUILDER_DIR/test_pipeline.py"

# –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–æ–Ω–Ω–æ–≥–æ —Ñ–∞–π–ª–∞
log_info "‚öôÔ∏è –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."
cat > "$PIPELINE_BUILDER_DIR/config.py" << 'EOF'
"""
–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è Pipeline Builder
"""

import os

# ComfyUI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
COMFYUI_URL = os.getenv('COMFYUI_URL', 'http://localhost:8188')

# AWS S3 –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
AWS_ACCESS_KEY_ID = os.getenv('AWS_ACCESS_KEY_ID', '')
AWS_SECRET_ACCESS_KEY = os.getenv('AWS_SECRET_ACCESS_KEY', '')
AWS_REGION = os.getenv('AWS_REGION', 'us-east-1')
S3_BUCKET = os.getenv('S3_BUCKET', 'comfyui-images')

# OpenAI –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
OPENAI_API_KEY = os.getenv('OPENAI_API_KEY', '')

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
LOG_LEVEL = os.getenv('LOG_LEVEL', 'INFO')
EOF

# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
log_info "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É—Å—Ç–∞–Ω–æ–≤–∫–∏..."
cd "$PIPELINE_BUILDER_DIR"

# –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞
python3 -c "
try:
    from comfyui_pipeline_builder import ComfyUIPipelineBuilder
    from pipeline_manager import PipelineManager
    print('‚úÖ –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π —É—Å–ø–µ—à–µ–Ω')
except ImportError as e:
    print(f'‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}')
    exit(1)
"

# –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø—Ä–æ—Å—Ç–æ–≥–æ –ø–∞–π–ø–ª–∞–π–Ω–∞
python3 -c "
from comfyui_pipeline_builder import ComfyUIPipelineBuilder
builder = ComfyUIPipelineBuilder()
node_id = builder.add_node('PreviewImage', {})
workflow = builder.build_workflow()
print('‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–∞ —É—Å–ø–µ—à–Ω–æ')
print(f'–£–∑–ª–æ–≤ –≤ –ø–∞–π–ø–ª–∞–π–Ω–µ: {len(workflow[\"nodes\"])}')
"

# –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ ComfyUI –¥–ª—è –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–æ–≤—ã—Ö —É–∑–ª–æ–≤
log_info "üîÑ –ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ ComfyUI..."
if systemctl is-active --quiet comfyui.service; then
    sudo systemctl restart comfyui.service
    log_success "ComfyUI –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω"
else
    log_warning "ComfyUI —Å–µ—Ä–≤–∏—Å –Ω–µ –∑–∞–ø—É—â–µ–Ω. –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é:"
    log_info "cd $COMFYUI_PATH && python main.py"
fi

log_success "üéâ Pipeline Builder —É—Å–ø–µ—à–Ω–æ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω!"
log_info "üìÅ –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ: $PIPELINE_BUILDER_DIR"
log_info "üîß –£—Ç–∏–ª–∏—Ç—ã:"
log_info "  - python create_pipeline.py <—Ç–∏–ø> - —Å–æ–∑–¥–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–æ–≤"
log_info "  - python test_pipeline.py <—Ñ–∞–π–ª> - —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–π–ø–ª–∞–π–Ω–æ–≤"
log_info "üåê ComfyUI –¥–æ—Å—Ç—É–ø–µ–Ω –ø–æ –∞–¥—Ä–µ—Å—É: http://localhost:8188"
log_info "üìñ –î–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è: $PIPELINE_BUILDER_DIR/README.md" 